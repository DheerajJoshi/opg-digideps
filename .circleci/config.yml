version: 2.1

workflows:
  build:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - master
      - plan:
          filters:
            branches:
              ignore:
                - master

orbs:
  aws-cli: circleci/aws-cli@0.1.13

jobs:
  plan:
    docker:
      - image: hashicorp/terraform:full
    environment:
      TF_CLI_ARGS_plan: -input=false -lock=false
      TF_CLI_ARGS_init: -input=false -upgrade=true -reconfigure
    steps:
      - checkout
      - run:
          name: terraform lint
          command: terraform fmt -diff -check -recursive
      - run:
          name: init shared
          command: terraform init shared
      - run:
          name: plan shared
          environment:
            TF_WORKSPACE: development
          command: terraform plan -var-file=shared/terraform.tfvars.json shared
      - run:
          name: init environment
          command: terraform init environment
      - run:
          name: plan environment
          environment:
            TF_WORKSPACE: master
            TF_VAR_OPG_DOCKER_TAG: dummy_value
          command: terraform plan -var-file=environment/terraform.tfvars.json environment
  build:
    docker:
      - image: circleci/python:2.7
    environment:
      AWS_REGION: eu-west-1
      AWS_CONFIG_FILE: ~/project/aws_config
      AWS_REGISTRY: 311462405659.dkr.ecr.eu-west-1.amazonaws.com
      VERSION: test
    steps:
      - setup_remote_docker
      - aws-cli/install
      - checkout
      - run:
          name: docker login
          command: eval $(aws ecr get-login --region $AWS_REGION --no-include-email --profile digideps-ci)
      - run:
          name: build api
          command: docker build -t ${AWS_REGISTRY}/digideps/api:${VERSION} api
      - run:
          name: build client
          command: docker build -t ${AWS_REGISTRY}/digideps/client:${VERSION} client
      - run:
          name: push api
          command: docker push ${AWS_REGISTRY}/digideps/api:${VERSION}
      - run:
          name: push client
          command: docker push ${AWS_REGISTRY}/digideps/client:${VERSION}
      - run: git tag ${VERSION}
      - run: git push --tags
