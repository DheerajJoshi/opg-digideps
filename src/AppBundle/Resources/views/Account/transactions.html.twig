{% trans_default_domain "report-transactions" %}

{{ form_errors_list(form) }}

{{ form_start(form, {attr: {novalidate: 'novalidate', class: 'expanding-transaction-table form-horizontal' }}) }}
    <div class="sections">
        {% for category, transactions in transactionsGrouped %}
        <div class="section">
            <div class="summary">
                <div class="title">{{ ('form.categories.' ~ category)  | trans({'%client%': report.client.firstname}, 'report-transactions') | raw  }}</div>
                <div class="sub-total">£<span class="value">{{ transactions.amountTotal | money_format}}</span></div>
            </div>
            <div class="detail transactions">
                {% for id, transaction in transactions.entries %}
                    {% if formTransactions[id].moreDetails is defined %}
                    {%     set formGroupClass = 'form-group-compound' %}
                    {% else %}
                    {%     set formGroupClass = '' %}
                    {% endif %}
                    <div class="transaction">
                        {#access the element via ID, set from the model therefore matching#}
                        {{ form_row(formTransactions[id].id) }}
                        {{ form_row(formTransactions[id].type) }}

                        {{ form_input(formTransactions[id].amount, 'form.entries.' ~ transaction.id, {
                            'inputPrefix' : '£',
                            'inputClass' : 'form-control__number transaction-value',
                            'labelText': ('form.entries.' ~ transaction.id ~ '.label') | trans({'%client%': report.client.firstname}, 'report-transactions'),
                            'formGroupClass': formGroupClass,
                            'removeLink': false
                        }) }}

                        {% if formTransactions[id].moreDetails is defined %}
                            {{ form_input(formTransactions[id].moreDetails, '', {
                                'labelText': ('form.entries.' ~ transaction.id ~ '.moreInformations') | trans({'%client%': report.client.firstname}, 'report-transactions'),
                                'formGroupClass': 'form-group-combo-description',
                                'inputClass': 'expanding transaction-more-details'
                            }) }}
                        {% endif %}

                        <div class="add-transaction">
                            <a href="#">add another</a>
                        </div>
                    </div>
                {% endfor %}
                <div class="sub-total">
                    Total {{ ('form.categories.' ~ category)  | trans({'%client%': report.client.firstname}, 'report-transactions') | lower | raw  }}:£<span class="value">{{ transactions.amountTotal | money_format }}</span>
                </div>
            </div>
        </div>
        {% endfor %}
        <div class="grand-total">
            {{ (subsection ~ '.grandtotal')| trans }}:
            <span class="currency">£</span>
            <span class="value behat-region-transaction-total">{{ transactionsTotal | money_format}}</span>
        </div>
    </div>

    {% include 'AppBundle:Components/ButtonBar:_save_bar.html.twig' with {
        transDomain: translationDomain,
        showDelete: false,
        showCancel: false,
        section: 'account',
    } %}

{{ form_end(form) }}

<script>
    $( document ).ready(function() {
        new GOVUK.ExpandingTransactionTable('.expanding-transaction-table');
        new GOVUK.AutoSave({
            form: $('form.expanding-transaction-table'),
            statusElement: $('#save-status'),
            url: '{{ path('accounts_money_save_json', {'reportId': report.id, 'type': jsonEndpoint}) }}',
            preprocessor: GOVUK.moneyInOuPreprocessor
        });

        function getTotal(elements) {

            var value,
                cleanString,
                total = 0.00;

            elements.each(function(index,item) {
                cleanString = item.value.replace(/[^\d\.\-\ ]/g, '');
                value = parseFloat(cleanString);
                if (!isNaN(value)) {
                    total += value;
                }
            });

            return total;

        }

        function createAdvancedFieds() {
            $('.transaction').each(function (index, element) {

                var transactionElement = $(element);

                var currentField = transactionElement.find('.form-group');
                var currentInput = currentField.find('.transaction-value').eq(0);

                var advancedField = currentField.clone();
                var advancedInput = advancedField.find('.transaction-value').eq(0);

                currentField.addClass('basic');
                currentInput.on('keyup', basicFieldChange);

                advancedField.addClass('advanced').insertAfter(currentField);

                advancedInput.addClass('exclude-total')
                    .on('keyup', advanceFieldChange)
                    .on('blur', function (event) {
                        GOVUK.formatCurrency(event.target);
                    });

            });
        }
        function remove(event) {
            var target = $(event.target);
            var transaction = target.closest('.transaction');

            target.parent().remove();


            var groups = transaction.find('.form-group');
            if (groups.length > 1) {
                transaction.find('.remove-button').show();
            } else {
                transaction.find('.remove-button').hide();
            }
        }
        function basicFieldChange(event) {

            var target = $(event.target);
            var transaction = target.closest('.transaction');
            var advancedFields = transaction.find('.advanced .transaction-value');

            advancedFields.each(function(index, element) {
                if (index === 0) {
                    element.value = target.val();
                } else {
                    element.value = "";
                }
                GOVUK.formatCurrency(element);
            });

        }
        function advanceFieldChange(event) {
            // Total up all the fields in this area and update the basic hidden field.
            var target = $(event.target);
            var transaction = target.closest('.transaction');
            var advancedFields = transaction.find('.advanced .transaction-value');

            var total = getTotal(advancedFields)

            var basicField = transaction.find('.basic .transaction-value').eq(0);
            basicField.val(total).trigger('recalc');
            GOVUK.formatCurrency(basicField);
        }

        $('.section').eq(0).removeClass('closed').addClass('open');

        $('input.transaction-value').on('blur', function (event) {
            GOVUK.formatCurrency(event.target);
        });

        $('#total-mode-switch, #detail-mode-switch').on('click', function (event) {
            event.preventDefault();
            $('.expanding-transaction-table .transactions').toggleClass("detail-view");
            $('#total-mode-switch').toggleClass('hidden');
            $('#detail-mode-switch').toggleClass('hidden');
        });

        $('.add-transaction a').on('click',function (event) {
            event.preventDefault();

            var target = $(event.target);
            var existing = target.parent().prev();
            var nextLine = existing.clone();
            existing.after(nextLine);
            nextLine.find('input.transaction-value').val("")
                .on('keyup', advanceFieldChange)
                    .on('blur', function (event) {
                        GOVUK.formatCurrency(event.target);
                    });

            nextLine.find('label').text('');

            var transaction = target.closest('.transaction');
            var groups = transaction.find('.form-group');
            if (groups.length > 1) {
                transaction.find('.remove-button').show().on('click', remove);
            } else {
                transaction.find('.remove-button').hide();
            }

        });

        $('.remove-button').on('click', remove);

        createAdvancedFieds();
    });
</script>
