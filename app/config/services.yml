imports:
    - { resource: endpoints.yml }
    - { resource: twig.yml }
    
services:
    apiclient:
        class:  AppBundle\Service\ApiClient
        arguments: [ @jms_serializer, {format: "json", base_url: "%api_base_url%", endpoints: "%api_endpoints%", debug: "%kernel.debug%"} ]
    deputyprovider:
        class:  AppBundle\UserProvider\DeputyProvider
        arguments: [ @apiclient, @jms_serializer ]
    util:
        class: AppBundle\Service\Util
        arguments: [@apiclient]
    formFieldsExtension:
        class: AppBundle\Twig\FormFieldsExtension
        public: false
        arguments: [ @translator ]
        tags:
            - { name: twig.extension }
    componentsExtension:
        class: AppBundle\Twig\ComponentsExtension
        public: false
        arguments: [  @translator, "%twig_components_extension%" ]
        tags:
            - { name: twig.extension }
    mailSender:
        class: AppBundle\Service\MailSender
        arguments: [ @apiclient, @translator, @router ]
        calls:
            - [setFrom, ["admin@digideps.service.dsd.io", "Digital deputyship service"]]
    redirectorService:
        class: AppBundle\Service\Redirector
        arguments: [ @security.context, @router, @session ]
    kernel.listener.login_listener:
        class: AppBundle\EventListener\LoginEventListener
        arguments: [ @event_dispatcher, @redirectorService ]
        tags:
            - { name: kernel.event_listener, event: security.interactive_login, method: onSecurityInteractiveLogin }
    kernel.listener.session_listener:
        class: AppBundle\EventListener\SessionListener
        arguments: [ @router , {idleTimeout: %session_expire_seconds%} ]
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
    logout_listener:
      class:   AppBundle\EventListener\LogoutListener
      arguments:  [@security.context, @router]
    response_nocache_listener:
       class:   AppBundle\EventListener\ResponseNoCacheListener
       tags:
            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }