<?php

namespace Tests\AppBundle\Entity;

use AppBundle\Entity\Client;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-11-12 at 12:29:35.
 */
class ClientTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Client
     */
    protected $object;

    protected function setUp()
    {
        $this->object = new Client();
    }

    public function testGetFullName()
    {
        $this->object->setFirstname('first name');
        $this->object->setLastname('last');

        $this->assertEquals('first name&nbsp;last', $this->object->getFullName('&nbsp;'));
    }

    public function testSetterGetters()
    {
        $this->assertEquals('123456', $this->object->setAddress('123456')->getAddress());
        $this->assertEquals('123456@mail.com', $this->object->setEmail('123456@mail.com')->getEmail());
        $this->assertEquals('123456', $this->object->setPhone('123456')->getPhone());
        $this->assertEquals('n4', $this->object->setPostcode('n4')->getPostcode());
    }


    /**
     * Data provider, expected reporting start date from a given court date
     */
    public function courtDateExpectedStartDateProvider()
    {
        $currentYear = date('Y');
        return [
            [new \DateTime('2000-01-01'), new \DateTime($currentYear-1 . '-01-01')],
            [new \DateTime('2000-12-31'), new \DateTime(($currentYear -1) . '-12-31')],
            [new \DateTime('2003-09-30'), new \DateTime(($currentYear-1) . '-09-30')],
            [new \DateTime('2015-03-31'), new \DateTime(($currentYear-1) . '-03-31')],
            [new \DateTime('2016-02-29'), new \DateTime(($currentYear-1) . '-03-01')],
            [new \DateTime('2017-03-01'), new \DateTime(($currentYear-1) . '-03-01')]
        ];
    }

    /**
     * Data provider, expected reporting end date from a given court date
     */
    public function courtDateExpectedEndDateProvider()
    {
        $currentYear = date('Y');

        return [
            [new \DateTime('2000-01-01'), new \DateTime(($currentYear-1) . '-12-31')],
            [new \DateTime('2000-12-31'), new \DateTime(($currentYear) . '-12-30')],
            [new \DateTime('2003-09-30'), new \DateTime(($currentYear) . '-09-29')],
            [new \DateTime('2015-03-31'), new \DateTime(($currentYear) . '-03-30')],
            [new \DateTime('2016-02-29'), new \DateTime(($currentYear) . '-02-28')],
            [new \DateTime('2017-03-01'), new \DateTime(($currentYear) . '-02-28')]
        ];
    }

    /**
     * @dataProvider courtDateExpectedStartDateProvider
     */
    public function testGetExpectedStartDate($courtDate, $expected)
    {
        $this->object->setCourtDate($courtDate);
        $this->assertEquals(
            $expected->format('d/m/Y'),
            $this->object->getExpectedReportStartDate()->format('d/m/Y')
        );
    }

    /**
     * @dataProvider courtDateExpectedEndDateProvider
     */
    public function testGetExpectedEndDate($courtDate, $expected)
    {
        $this->object->setCourtDate($courtDate);
        $this->assertEquals(
            $expected->format('d/m/Y'),
            $this->object->getExpectedReportEndDate()->format('d/m/Y')
        );
    }
}
