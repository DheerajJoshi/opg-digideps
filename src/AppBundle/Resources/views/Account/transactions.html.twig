{% trans_default_domain "report-transactions" %}

{{ form_errors_list(form) }}

{{ form_start(form, {attr: {novalidate: 'novalidate', class: 'expanding-transaction-table form-horizontal' }}) }}
    <div class="sections">
        {% for category, transactions in transactionsGrouped %}
        <div class="section">
            <div class="summary">
                <div class="title">{{ ('form.categories.' ~ category)  | trans({'%client%': report.client.firstname}, 'report-transactions') | raw  }}</div>
                <div class="sub-total">{{ 'currencySymbol' | trans }}<span class="value">{{ transactions.amountTotal | number_format(2, '.', ',')}}</span></div>
            </div>
            <div class="detail transactions">
                {% for id, transaction in transactions.entries %}
                    {% if formTransactions[id].moreDetails is defined %}
                    {%     set formGroupClass = 'form-group-compound' %}
                    {% else %}
                    {%     set formGroupClass = '' %}
                    {% endif %}
                    <div class="transaction">
                        {#access the element via ID, set from the model therefore matching#}
                        {{ form_row(formTransactions[id].id) }}
                        {{ form_row(formTransactions[id].type) }}
    
                        {{ form_input(formTransactions[id].amount, 'form.entries.' ~ transaction.id, {
                            'inputPrefix' : 'Â£',
                            'inputClass' : 'form-control__number transaction-value',
                            'labelText': ('form.entries.' ~ transaction.id ~ '.label') | trans({'%client%': report.client.firstname}, 'report-transactions'),
                            'formGroupClass': formGroupClass
                        }) }}
    
                        {% if formTransactions[id].moreDetails is defined %}
                            {{ form_input(formTransactions[id].moreDetails, '', {
                                'labelText': ('form.entries.' ~ transaction.id ~ '.moreInformations') | trans({'%client%': report.client.firstname}, 'report-transactions'),
                                'formGroupClass': 'form-group-combo-description',
                                'inputClass': 'expanding transaction-more-details'
                            }) }}
                        {% endif %}
                    </div>
                {% endfor %}
                <div class="sub-total">
                    Total {{ ('form.categories.' ~ category)  | trans({'%client%': report.client.firstname}, 'report-transactions') | lower | raw  }}: {{ 'currencySymbol' | trans }}<span class="value">{{ transactions.amountTotal | number_format(2, '.', ',') }}</span>
                </div>
            </div>
        </div>
        {% endfor %}
        <div class="grand-total">
            {{ (subsection ~ '.grandtotal')| trans }}: 
            <span class="currency">{{ 'currencySymbol' | trans }}</span>
            <span class="value behat-region-transaction-total">{{ transactionsTotal | number_format(2, '.', ',')}}</span>
        </div>
    </div>

    {% include 'AppBundle:Components/ButtonBar:_save_bar.html.twig' with {
        transDomain: translationDomain,
        showDelete: false,
        showCancel: false,
        section: 'account',
    } %}

{{ form_end(form) }}

<script>
    $( document ).ready(function() {
        new GOVUK.ExpandingTransactionTable('.expanding-transaction-table');
    });
</script>
<script type="text/javascript">
    $( document ).ready(function() {
        
        var form = $('form.expanding-transaction-table');

        function done(data) {
            console.log('done')
            console.log(data);
        }

        function fail(data) {
            console.log(data);
            if (data.errors.errorCode === 1001 && data.errors.hasOwnProperty('fields')) {
                showFieldErrors(data.errors.fields);
            } else {
                showGeneralError(data.errors.description);
            }
            
        }
        
        function showFieldErrors(errors) {
            console.log(errors);
            
            // for each one use the id to get the input value
            
            // now get a reference to it's parent
            
            // get a reference to the label.form-label below it
            
            
            
        }
        
        function showGeneralError(description) {
            console.log(description);    
        }

        function clearErrorDisplay() {
            console.log('clear errors');
        }
        
        function autosave(event) {
            var data = $(this).serialize();
            event.preventDefault();
            $.ajax({
                type: 'PUT',
                url: '{{ path('accounts_money_save_json', {'reportId': report.id, 'type': jsonEndpoint}) }}',
                data: data,
                done: done,
                fail: fail
            });
        }

        //form.submit(autosave);
        form.find(['input']).on('blur', autosave);
        $(window).on("beforeunload", autosave);

    });
</script>
