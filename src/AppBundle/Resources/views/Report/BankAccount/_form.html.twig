{% set translationDomain = "report-bank-accounts" %}

{{ form_start(form, {attr: {id: 'account-form', novalidate: 'novalidate' } }) }}

    {% if step == 1 %}
        {{ form_checkbox_group(form.accountType, 'form.accountType', {
            'fieldSetClass' : 'inline',
            'legendClass' : 'form-label',
            'items': [
            {'labelClass': 'block-label', 'elementClass': '' },
            {'labelClass': 'block-label', 'elementClass': '' },
            {'labelClass': 'block-label', 'elementClass': '' },
            {'labelClass': 'block-label', 'elementClass': '' },
            {'labelClass': 'block-label', 'elementClass': '' },
            {'labelClass': 'block-label', 'elementClass': '' },
            {'labelClass': 'block-label', 'elementClass': '' },
            ]
        }) }}
    {% endif %}

{% if step == 2 %}

    {% if account.requiresBankNameAndSortCode %}
        {{ form_input(form.bank, 'form.bank') }}
    {% else %}
        {% do form.bank.setRendered %}
    {% endif %}

    {{ form_input(form.accountNumber, 'form.accountNumber', {
        'inputClass' : 'account-number'
    }) }}

    {% if account.requiresBankNameAndSortCode %}
        {{ form_sort_code(form.sortCode, 'form.sortCode', {
            'inputType' : 'Number'
        }) }}
    {% else %}
        {% do form.sortCode.setRendered %}
    {% endif %}

    <fieldset>
        <legend class="hidden">Joint account</legend>
        {{ form_checkbox_group(form.isJointAccount, 'form.isJointAccount', {
            'fieldSetClass' : 'inline',
            'legendText' : 'form.isJointAccount.label' | trans({}, translationDomain),
            'legendClass' : 'form-label',
            'items': [
            {'labelClass': 'block-label', 'elementClass': '' },
            {'labelClass': 'block-label', 'elementClass': '' }
            ]
        }) }}
    </fieldset>
{% endif %}

{% if step == 3 %}
    {{ form_input(form.openingBalance, '', {
        'labelText': 'form.openingBalance.label' | trans({'%startDate%': report.startDate | date("jS F Y")}, translationDomain),
        'inputPrefix' : '£',
        'inputClass' : 'form-control__number'
    } ) }}
    {{ form_input(form.closingBalance, 'form.closingBalance', {
        'labelText': 'form.closingBalance.label' | trans({'%endDate%': report.endDate | date("jS F Y")}, translationDomain),
        'inputPrefix' : '£',
        'inputClass' : 'form-control__number'
    } ) }}
{% endif %}

{% if step == 4 %}
    {{ form_checkbox_group(form.isClosed, 'form.isClosed', {
        'fieldSetClass' : 'inline',
        'legendText' : 'form.isClosed.label' | trans({'%endDate%': report.endDate | date("jS F Y")}, translationDomain),
        'legendClass' : 'form-label',
        'items': [
        {'labelClass': 'block-label', 'elementClass': '' },
        {'labelClass': 'block-label', 'elementClass': '' }
        ]
    }) }}
{% endif %}

<div class="save-bar button-bar">
    {{ form_submit(form.save,'form.save', { 'buttonClass': '' }) }}
</div>

{{ form_end(form) }}

<script>
    $('input.form-control__number').on('blur', function (event) {
        GOVUK.formatCurrency(event.target);
    });
</script>

{{ form_end(form) }}

<script>
    $('input.form-control__number').on('blur', function (event) {
        GOVUK.formatCurrency(event.target);
    });
</script>
