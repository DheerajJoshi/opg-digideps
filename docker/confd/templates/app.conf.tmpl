{{ if exists "/opg/nginx/ssl/force/redirect" }}
server {
   listen      80 default_server;
   return      307 https://$host$request_uri;
}
{{ end }}


server {
{{ if not (exists "/opg/nginx/ssl/force/redirect") }}
    listen     80 default_server;
{{ end }}
    #Using global cert let's also listen on 443
    listen     443 default_server ssl;

    rewrite_log  on;
    access_log  /var/log/app/nginx.access.json logstash_json;
    error_log   /var/log/app/nginx.error.log error;


    index {{ getv "/opg/nginx/index" }};

    client_max_body_size 20m;

    root /app/web;

    location =/meta.json {
        alias /app/META;
    }

    fastcgi_buffers 256 16k;
    fastcgi_buffer_size 128k;
    fastcgi_busy_buffers_size 256k;
    fastcgi_temp_file_write_size 256k;

    # serve static files directly
    location ~* ^.+\.(jpg|jpeg|gif|css|png|js|ico|htm|html|xml|txt|woff|eot|ttf)$ {
        access_log        off;
        expires           24h;
    }

    location / {
        try_files $uri $uri/ /{{ getv "/opg/nginx/index" }}$is_args$args;
    }

    location ~ \.php$ {
        fastcgi_index   {{ getv "/opg/nginx/index" }};
        fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include         fastcgi_params;

        # set X-Request-Id header for fastcqi
        fastcgi_param   HTTP_X_REQUEST_ID  $http_x_request_id;

        fastcgi_pass    127.0.0.1:9000;

        # hide php version
        fastcgi_hide_header "X-Powered-By";
    }

    # i.e. deny access to .htaccess in case someone will create it
    location ~ /\. {
        deny  all;
    }

    if ($http_x_request_id = '') {
        set $http_x_request_id $request_id;
    }
    # add x-request-id to response
    add_header X-Request-Id $http_x_request_id;
    proxy_set_header X-Request-Id $http_x_request_id;
}
