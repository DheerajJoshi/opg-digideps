{% extends 'AppBundle:Layouts:application.html.twig' %}

{% trans_default_domain "admin" %}
{% set page = 'uploadPA' %}

{% block htmlTitle %}{{ (page ~ '.htmlTitle') | trans }}{% endblock %}
{% block pageTitle %}{{ (page ~ '.pageTitle') | trans }}{% endblock %}
{% block pageTitleClass %}heading-large{% endblock %}

{% block supportTitleBottom %}
    <span class="heading-secondary">{{ (page ~ '.supportTitle') | trans }}</span>
{% endblock %}

{% block helpline %}{% endblock %}

{% block pageContent %}

    {% if nOfChunks %}

        <p class="text">{{ (page ~ '.uploading') | trans | raw }}</p>

        <progress id="uploadProgress" value="0" max="{{ nOfChunks }}" data-path-admin-pa-upload="{{ path('admin_org_upload') }}" data-path-pa-add-ajax="{{ path('org_add_ajax') }}" class="js-upload-progress-pa"/>

    {% else %}

        <h2 class="heading-medium">{{ (page ~ '.heading') | trans }}</h2>

        {{ form_start(form, {attr: {novalidate: 'novalidate' }}) }}

        {{ form_input(form.file, '', {
            'labelText': 'Select CSV file',
            'inputClass': 'no-border'
        }) }}

        {{ form_submit(form.upload, '', {'labelText': 'Upload PA/Prof users'}) }}

        <progress id="uploadProgress" value="0" min="0" max="1" />

        {{ form_end(form) }}

        <script>
            $button = document.querySelector('#admin_upload_upload');
            $progress = document.querySelector('#uploadProgress');

            $button.addEventListener('click', (event) => {
                event.preventDefault();

                var formData = new FormData(document.querySelector('form'));

                fetch('{{ path('admin_org_upload') }}', { method: 'POST', body: formData })
                    .then(response => {
                        const reader = response.body.getReader();

                        readPartial = (result) => {
                            if (result.done) {
                                $progress.value = 1;
                                return;
                            }

                            const progress = new TextDecoder("utf-8").decode(result.value);

                            $progress.value = parseFloat(progress, 100);

                            reader.read().then(readPartial); //recurse through the stream
                        }

                        reader.read().then(readPartial);
                    });
            });
        </script>

    {% endif %}

{% endblock %}
